name: CI
on: [ push, pull_request ]
jobs:
  Build:

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node-version: [ 20 ]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Build
      if: runner.os == 'Linux'
      env:
        COVERAGE: 1
        TEST_BROWSERS: ChromeHeadless
      run: npm run all
    - name: Build
      if: runner.os != 'Linux'
      env:
        TEST_BROWSERS: ChromeHeadless
      run: npm run all
    - name: Import Secrets
      if: runner.os == 'Linux'
      id: secrets
      uses: hashicorp/vault-action@v2.4.3
      with:
        url: ${{ secrets.VAULT_ADDR }}
        method: approle
        roleId: ${{ secrets.VAULT_ROLE_ID }}
        secretId: ${{ secrets.VAULT_SECRET_ID }}
        exportEnv: false
        secrets: |
          secret/data/products/desktop-modeler/camunda/example-data-properties-provider CODECOV_TOKEN;
    - name: Upload coverage
      if: runner.os == 'Linux'
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: true
      env:
        CODECOV_TOKEN: ${{ steps.secrets.outputs.CODECOV_TOKEN }}
